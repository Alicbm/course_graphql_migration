type Query {
  hello: String
  getPerson(name: String, age: Int): String

  #products
  product(id: ID!): Product
  products: [Product]
  category(id: ID!): Category
}

type Mutation {
  login(email: EmailAddress!, password: String!): AuthResponse
  addProduct(dto: CreateProductInput!): Product
  updateProduct(id: ID!, dto: UpdateProductInput!): Product
  deleteProduct(id: ID!): ID
  addCategory(dto: CreateCategoryInput): Category
}

type Product {
  id: ID!
  name: String!
  price: Float!
  description: String!
  image: String!
  categoryId: ID!
  category: Category!
  createdAt: String!
}

type Category {
  id: ID!
  name: String!
  price: Float!
  image: String!
  products: [Product]
}

type AuthResponse {
  access_token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  role: String!
  createdAt: String!
}

input CreateProductInput {
  name: String!
  price: Float!
  description: String!
  image: String!
  categoryId: ID!
}

input UpdateProductInput {
  name: String
  price: Float
  description: String
  image: String
  categoryId: ID
}

input CreateCategoryInput {
  name: CategoryNameType!
  image: URL!
}

scalar CategoryNameType
